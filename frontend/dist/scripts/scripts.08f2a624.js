"use strict";angular.module("cryptClientApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngMaterial","ui.router","ui.grid","ui.grid.selection","ngFileUpload","ngSanitize"]).config(["$routeProvider","$resourceProvider","$stateProvider",function(a,b,c){c.state("main",{templateUrl:"/views/scratch.html"}),c.state("login",{url:"/session/login",controller:"LoginController",templateUrl:"/views/session/login.html"}).state("register",{controller:"RegisterController",templateUrl:"/views/session/register.html"}),c.state("users",{url:"/users",controller:"UsersController",templateUrl:"/views/users.html"}).state("users.groups",{url:"/users_grp_admin",controller:"UserGroupController",templateUrl:"/views/groups/mygroups.html"}).state("users.userId",{url:"/:userId"}).state("users.userId.groups",{url:"/groups"}).state("users.userId.friends",{url:"/friends"}).state("users.userId.documents",{url:"/documents"}),c.state("groups",{url:"/groups",controller:"GroupsController",templateUrl:"/views/groups.html"}).state("groups.admin",{url:"/groups_admin",templateUrl:"/views/groups/my_groups.html"}).state("groups.groupId",{url:"/:groupId"}).state("groups.groupId.documents",{url:"/documents"}).state("groups.groupId.users",{url:"/users"}),c.state("documents",{url:"/documents",templateUrl:"/views/documents.html"}).state("documents.upload",{url:"/documents/upload",templateUrl:"/views/documents/documents.upload.html"}).state("documents.documentId",{url:"/:documentId"}),c.state("friends",{url:"/friends",templateUrl:"/views/friends.html"}).state("friends.friendId",{url:"/:friendId"}).state("friends.friendId.groups",{url:"/groups"}).state("friends.friendId.friends",{url:"/friends"}),a.otherwise({redirectTo:"/"})}]).run(["$rootScope","AUTH_EVENTS","Auth",function(a,b,c){a.$on("$stateChangeStart",function(){c.isLoggedIn()||a.$broadcast(b.notAuthenticated)})}]),angular.module("cryptClientApp").controller("MainController",["$q","$scope","$window","$rootScope","AUTH_EVENTS","$state","$mdSidenav","$mdBottomSheet","$mdToast","Storage","Auth",function(a,b,c,d,e,f,g,h,i,j,k){function l(a,b){i.show({template:'<md-toast class="md-toast '+a+'">'+b+"</md-toast>",hideDelay:6e3,position:"center left"})}b.errors="",d.isLoggedIn=!1,b.$watch("errors",function(a,c){a!==c&&(b.errors=a)}),b.tabs={users:{label:"users",contents:["friends","groups","search"]},documents:{label:"documents",contents:["private","groups"]},groups:{label:"groups",contents:["admin","member","search"]},friends:{label:"friends",contents:["find"]}},b.openLeftMenu=function(){g("left").toggle().then(function(){})},b.onTabSelected=function(a){d.isLoggedIn&&(b.title=a,f.go(a))},b.tabContentClick=function(a,b){d.isLoggedIn&&f.go(a+"."+b)},b.goHome=function(){f.go("main")},b.goUpload=function(){f.go("documents.upload")},d.$on(e.notAuthorized,function(){j.deleteAll(),console.log(e.notAuthorized)}),d.$on(e.notAuthenticated,function(){d.isLoggedIn=!1,j.remove(),c.location.href="/#/session/login"}),d.$on(e.sessionTimeout,function(){console.log(e.sessionTimeout),j.remove(),c.location.href="/"}),d.$on(e.logoutSuccess,function(){d.isLoggedIn=!1,j.remove(),c.location.href="/"}),d.$on(e.loginSuccess,function(){d.isLoggedIn=k.isLoggedIn(),c.location.href="#/"}),d.$on(e.loginFailed,function(){c.location.href="#/",d.isLoggedIn=!1,j.remove()}),d.$on(e.registrationFailed,function(){c.location.href="#/",d.isLoggedIn=!1,j.remove(),l("success-toast",e.registrationFailed)}),d.$on(e.registrationSuccess,function(){c.location.href="#/",d.isLoggedIn=!1,j.remove(),l("success-toast",e.registrationSuccess)}),d.$on(e.notFound,function(){l("success-toast",e.notFound)})}]),angular.module("cryptClientApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("cryptClientApp").factory("Rest",["$resource","RouteUsers","RouteDocuments","RouteFriends","RouteGroups",function(a,b,c,d,e){function f(){angular.forEach(h,function(b,c){g[c]=a(b.url,b.defaults,b.actions,b.opts)})}var g={},h={User:b.routes,Group:e.routes,Document:c.routes,Friend:d.routes};return f(),g}]),angular.module("cryptClientApp").factory("Storage",["$cookies","$filter",function(a,b){function c(){var a=new Date((new Date).getTime()+6e5),b=a.toUTCString().toString();d.expires=b}var d={secure:!1},e=function(b){var c=a.get(b);return null===c||angular.isUndefined(c)?null:angular.isString(c)?c:angular.isObject(c)?JSON.parse(c):void 0},f=function(b,d){return c(),angular.isString(b)?angular.isObject(d)?(a.put(b,JSON.stringify(d)),!0):angular.isString(d)?(a.put(b,d),!0):void 0:!1},g=function(){return a.getAll()},h=function(a){angular.forEach(a,function(a,b){f(b,a)})},i=function(){var b=g();angular.forEach(b,function(b,c){a.remove(c)})},j={get:e,set:f,getAll:g,putAll:h,remove:i};return j}]),angular.module("cryptClientApp").factory("RouteDocuments",function(){var a={url:"/api/documents/:documentId",defaults:{documentId:"@documentId"},actions:{find:{method:"GET"},findOne:{method:"GET"},changeOwner:{method:"POST",params:{verb:"changeOwner"}},shareDocument:{method:"POST",params:{verb:"shareDocument",group:"@group"}},addDocument:{method:"POST",params:{group:"group"},transformRequest:angular.entity,headers:{"Content-Type":void 0}}}};return{routes:a}}),angular.module("cryptClientApp").factory("RouteUsers",function(){var a={url:"/api/users/:userId/:suffix",defaults:{userId:"@userId",suffix:""},actions:{find:{method:"GET",isArray:!0},findOne:{method:"GET"},create:{method:"POST"},validate:{method:"POST",params:{suffix:"validate"}},addFriend:{method:"POST",params:{suffix:"addFriend"}},revoke:{method:"POST",params:{suffix:"revoke"}},addToGroup:{method:"POST",params:{suffix:"addToGroup"}},friends:{method:"GET",params:{suffix:"friends"}},groups:{method:"GET",params:{suffix:"groups"}}},opts:{}};return{routes:a}}),angular.module("cryptClientApp").factory("RouteFriends",function(){var a={url:"/api/friends/:friendId/:suffix",defaults:{friendId:"@friendId",suffix:""},actions:{find:{method:"GET"},findOne:{method:"GET"},addFriend:{method:"POST"},validate:{method:"POST",params:{suffix:"validate"}},revokeFriend:{method:"POST",params:{suffix:"revoke"}},addToGroup:{method:"POST",params:{suffix:"addToGroup",group:"@groupId"}}}};return{routes:a}}),angular.module("cryptClientApp").factory("RouteGroups",function(){var a={url:"/api/groups/:groupId/:suffix",defaults:{groupId:"@groupId",suffix:""},actions:{find:{method:"GET",isArray:!0},findOne:{method:"GET"},create:{method:"POST"},addFriend:{method:"POST"},documents:{method:"GET",params:{suffix:"documents"}},users:{method:"GET",params:{suffix:"users"}}},opts:{}};return{routes:a}}),angular.module("cryptClientApp").controller("UsersController",["$scope","$rootScope","$state","Rest",function(a,b,c,d){function e(){d.User.find().$promise.then(function(b){a.users=b})}e()}]).controller("UserGroupController",["$scope","Storage","Rest",function(a,b,c){c.Group.find({gv:b.get("currentUser").id}).$promise.then(function(b){a.my_groups=b})}]),angular.module("cryptClientApp").controller("GroupsController",["Rest","Storage","$scope",function(a,b,c){function d(){a.Group.find().$promise.then(function(a){b.set("groups",a),c.groups=a}),a.Group.find({gv:b.get("currentUser").id}).$promise.then(function(a){b.set("my_groups",a),c.my_groups=a})}d()}]),angular.module("cryptClientApp").controller("DocumentsController",["$scope",function(a){function b(){a.filesString=[],a.files=[],a.startUpload=function(){},a.clean_documents_list=function(){},a.$watch("files",function(b,c){b!==c&&a.filesString.push(newFiels)})}b()}]),angular.module("cryptClientApp").controller("FriendsCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("cryptClientApp").filter("filter",function(){return function(a){return"filter filter: "+a}}),angular.module("cryptClientApp").factory("Interceptor",["$q","$location","Storage","$rootScope","AUTH_EVENTS",function(a,b,c,d,e){return{request:function(a){return void 0===a.headers["X-XSRF-TOKEN"]&&(a.headers["X-XSRF-TOKEN"]=c.get("X-XSRF-TOKEN")||""),void 0===a.headers.Authorization&&(a.headers.Authorization="SRP"),void 0===a.headers["WWW-Authenticate"]&&(a.headers["WWW-Authenticate"]="SRP"),void 0===a.headers["hash-algorithm"]&&(a.headers["hash-algorithm"]="SHA256"),void 0===a.headers.realm&&(a.headers.realm="realm"),void 0===a.headers.expires_in&&(a.headers.expires_in=3600),void 0===a.headers.token_type&&(a.headers.token_type="bearer"),void 0===a.headers.access_token&&(a.headers.access_token="xsrh"),void 0===a.headers.client_public_key&&(a.headers.client_public_key="pubkey"),void 0===a.headers.server_public_key&&(a.headers.server_public_key="ddodi"),a},response:function(a){return a},responseError:function(b){return d.$broadcast({401:e.notAuthenticated,403:e.notAuthorized,419:e.sessionTimeout,440:e.sessionTimeout,404:e.notFound}[b.status],b),a.reject(b)},requestError:function(b){return a.reject(b)}}}]).config(["$httpProvider",function(a){a.interceptors.push("Interceptor")}]),angular.module("cryptClientApp").factory("Auth",["$http","$state","$q","AUTH_EVENTS","Storage","HEADERS","$rootScope",function(a,b,c,d,e,f,g){function h(a,b){var d,e=!1,f=c.defer();return angular.forEach(b,function(b,c){angular.isUndefined(c)||null===c||a!==c||(d=b,e=!0)}),e?f.resolve({name:a,value:d}):f.reject({err:"header error 	"+a}),f.promise}var i={};return i.login=function(b){var i=c.defer();return a.post("/session/login",b).success(function(a,c,j){var k=j();e.set("currentUser",b.email),angular.forEach(f,function(a){h(a.name,k).then(function(a){e.set(a.name,a.value)},function(a){g.$broadcast(d.loginFailed),i.reject(a)})}),g.$broadcast(d.loginSuccess),i.resolve(c)}).error(function(a){g.$broadcast(d.loginFailed),i.reject(a)}),i.promise},i.isLoggedIn=function(){var a=e.get("currentUser"),b=null!==a;return b},i.logout=function(){e.remove()},i.register=function(b){var e=c.defer();return console.log("come here"),a.post("/session/register",b).success(function(a){g.$broadcast(d.registrationSuccess),e.resolve(a)}).error(function(a){g.$broadcast(d.registrationFailed),e.reject(a)}),e.promise},i}]),angular.module("cryptClientApp").directive("tab",function(){return{template:'<style ui-grid-style>{{ ui-style }}</style><div ui-grid=gridOptions class="grid" ui-grid-selection ></div>',restrict:"E",transclude:!1,scope:{data:"=",crudOnSelect:"=",onSelect:"="},link:function(a,b){a.gridOptions={enableSelectAll:!0,enableSelection:!0,enableFiltering:!0,showHeader:!1,selectionRowHeaderWidth:35,rowHeight:35,showGridFooter:!0};var c=function(a){console.log(a)};a.$watch("data",function(){a.gridOptions.data=a.data}),a.$watch("onSelect",function(){angular.isFunction(a.onSelect)&&(c=a.onSelect)}),a.$watch("crudOnSelect",function(){"true"===a.crudOnSelect&&console.log("lkajsdf")}),a.myStyle=".grid { border: 1px solid blue }",a.gridOptions.onRegisterApi=function(b){a.gridApi=b,b.selection.on.rowSelectionChanged(a,c)}}}}).directive("accessLevel",["Auth",function(a){return{restrict:"A",link:function(a,b,c){}}}]).directive("uploader",function(){return{restrict:"E",transclude:!0,templateUrl:"/views/documents/widget.uploader.html",scope:{cryptfiles:"=",uploader:"="},controller:["$scope","$compile","Upload",function(a,b,c){a.files=[],a.filesString=[],a.$watch("files",function(b,c){b!==c&&null!==b&&(console.log(b[0]),a.filesString.push(b[0]))}),a.removeFile=function(b){var c=[],d=a.filesString;angular.forEach(d,function(a,d){d!==b&&c.push(a)}),a.filesString=c},a.upload=function(){}}],link:function(a,b,c){}}}),angular.module("cryptClientApp").controller("SessionController",["$scope","$rootScope","$state","AUTH_EVENTS","Auth","Storage",function(a,b,c,d,e,f){function g(){a.logout=function(){f.remove(),b.isLoggedIn=!1,b.$broadcast(d.logoutSuccess),c.go("login")}}g()}]).controller("RegisterController",["$scope","Auth",function(a,b){a.register=function(a){b.register(a)}}]).controller("LoginController",["$scope","Auth",function(a,b){a.login=function(a){b.login(a)}}]),angular.module("cryptClientApp").constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notFound:"resource-not-found",registrationFailed:"registration-failed",registrationSuccess:"registration-success",notAuthorized:"auth-not-authorized"}),angular.module("cryptClientApp").constant("HEADERS",{contentSecurityPolicy:{name:"content-security-header",value:""},authorization:{name:"authorization",value:""},wwwAuthentication:{name:"www-authentication",value:""},realm:{name:"realm",value:""},hashAlgorithm:{name:"hash-algorithm",value:""},xXsrfToken:{name:"x-xsrf-token",value:""},expiresIn:{name:"expires-in",value:""},clientPublicKey:{name:"client-public-key",value:""},serverPublicKey:{name:"server-public-key",value:""},typ:{name:"typ",value:""},alg:{name:"alg",value:""}}),angular.module("cryptClientApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/documents.html","<div ng-cloak> Documents </div> <div ng-cloak ui-view> </div>"),a.put("views/documents/documents.upload.html",'<div class="well" style="margin: 10px"> <div> <uploader> </uploader> </div> </div>'),a.put("views/documents/widget.uploader.html",'<div class="container-fluid"> <form class="form-horizontal" role="form"> <div class="form-group"> <div class="col-sm-10"> Add files <md-button ngf-select ngf-multiple="true" ng-model="files" class="md-fab step md-warn" aria-label="FAB"> <md-tooltip style="backgroung-color:red"> <b>file upload</b> </md-tooltip> <span class="glyphicon glyphicon-plus"></span> </md-button> </div> </div> </form></div>   <div> <div class="container-fluid"> <table class="table table-hover table-striped"> <thead> <tr> <th></th> <th></th> <th></th> <th></th> <th></th> </tr> </thead> <tbody> <tr class="sibling" ng-repeat="file in filesString"> <td> <label for="">{{ file.name }}</label></td> <td>{{ file.lastModified | date }} </td> <td>{{ file.size }} </td> <td>{{ file.type }} </td> <td> <button ng-click="upload( $index )" class="btn btn-success"> <span class="glyphicon glyphicon-upload"></span> </button> <button ng-click="removeFile( $index )" class="btn btn-danger">X</button> </td> </tr> </tbody> </table> </div> <div class="form-group" ng-if="filesString"> <div> <button type="submit" ng-click="upload()" class="btn btn-success">Upload All</button> </div> </div> </div>'),a.put("views/friends.html","Friends"),a.put("views/groups.html",'<div ng-cloak> <h3> registered to Groups : </h3> <tab data="my_groups"></tab> <h3> Public Groups : </h3> <tab data="groups"></tab> </div>'),a.put("views/groups/mygroups.html",'<div> <h3> my groups </h3> <tab data="my_groups"></tab> </div>'),a.put("views/main.html",'<div class="jumbotron"> <h1>\'Allo, \'Allo!</h1> <p class="lead"> <img src="images/yeoman.png" alt="I\'m Yeoman"><br> Always a pleasure scaffolding your apps. </p> <p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<span class="glyphicon glyphicon-ok"></span></a></p> </div> <div class="row marketing"> <h4>HTML5 Boilerplate</h4> <p> HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites. </p> <h4>Angular</h4> <p> AngularJS is a toolset for building the framework most suited to your application development. </p> <h4>Karma</h4> <p>Spectacular Test Runner for JavaScript.</p> </div>'),a.put("views/menu.html",'<div> <div layout="row"> <div flex>First item in row</div> <div flex="20">Second item in row</div> </div> <div layout="column"> <div flex="66">First item in column</div> <div flex="33">Second item in column</div> </div> </div>'),a.put("views/scratch.html","Scratch"),a.put("views/session/login.html",'<div layout="column" flex="40" layout-align="center" layout-padding ng-cloak> <br> <md-content class="autoScroll"> <md-input-container class="md-icon-float md-block"> <label>Email</label> <md-icon md-svg-src="/images/18/person.svg"></md-icon> <input ng-model="user.email" type="email"> </md-input-container> <md-input-container class="md-icon-float md-block"> <label>Password</label> <md-icon md-svg-src="images/18/person.svg"></md-icon> <input ng-model="user.password" type="password"> </md-input-container> <md-input-container class="md-block"> <md-button ng-click="login( user )">loging</md-button> </md-input-container> </md-content> </div>'),a.put("views/session/register.html",'<div layout="column" flex="100" layout-align="center" layout-padding ng-cloak> <br> <md-content class="autoScroll"> <md-input-container class="md-icon-float md-block"> <label>First-name</label> <md-icon md-svg-src="/images/18/person.svg"></md-icon> <input ng-model="user.firstname" type="text"> </md-input-container> <md-input-container class="md-icon-float md-block"> <label>Second-name</label> <md-icon md-svg-src="/images/18/person.svg"></md-icon> <input ng-model="user.secondname" type="text"> </md-input-container> <md-input-container class="md-icon-float md-block"> <label>Company</label> <md-icon md-svg-src="/images/18/person.svg"></md-icon> <input ng-model="user.company" type="text"> </md-input-container> <md-input-container class="md-icon-float md-block"> <label>Email</label> <md-icon md-svg-src="/images/18/person.svg"></md-icon> <input ng-model="user.email" type="email"> </md-input-container> <md-input-container class="md-icon-float md-block"> <label>Password</label> <md-icon md-svg-src="images/18/person.svg"></md-icon> <input ng-model="user.password" type="password"> </md-input-container> <md-input-container class="md-icon-float md-block"> <label>Passphrase</label> <md-icon md-svg-src="images/18/person.svg"></md-icon> <input ng-model="user.passphrase" type="password"> </md-input-container> <md-input-container class="md-block"> <md-button ng-click="register( user )">Register</md-button> </md-input-container> </md-content> </div>'),a.put("views/users.html",'<div ng-cloak> <h3> System Users </h3> <tab data="users"> </tab> </div> <div ui-view> </div>')}]);